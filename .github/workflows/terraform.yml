# GitHub Actions workflow for Terraform vulnerability scanning with Checkov
name: Terraform Security Scan

on:
  push:
    branches: [ main, master ]
    paths:
      - '**.tf'
      - '**.tfvars'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**.tf'
      - '**.tfvars'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  checkov-scan:
    name: Checkov Terraform Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Checkov
        run: pip install checkov
      
      - name: Run Checkov scan
        run: |
          checkov --directory . --framework terraform --output cli --output sarif --output-file-path results.sarif
          echo "Scan completed. Results saved to results.sarif"
      
      # Upload results as artifacts for reviewing later - using v2 which is compatible
      - name: Upload SARIF results
        uses: actions/upload-artifact@v2
        with:
          name: checkov-results
          path: results.sarif
      
      # Optional: Upload to GitHub Security tab
      - name: Upload SARIF file to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()  # Run this step even if previous steps fail
        with:
          sarif_file: results.sarif
          
      # Fail the build if Checkov finds high severity issues (optional)
      - name: Check for high severity issues
        run: |
          if grep -q '"severity": "HIGH"' results.sarif; then
            echo "High severity security issues found in Terraform code!"
            exit 1
          else
            echo "No high severity issues found."
          fi
